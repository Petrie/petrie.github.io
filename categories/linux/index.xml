<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Petrie's Site</title><link>https://petrie.github.io/categories/linux/</link><description>Recent content in Linux on Petrie's Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 26 Sep 2016 13:27:45 +0000</lastBuildDate><atom:link href="https://petrie.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>如何将Linux命令的结果作为下一个命令的参数</title><link>https://petrie.github.io/2016/09/%E5%A6%82%E4%BD%95%E5%B0%86linux%E5%91%BD%E4%BB%A4%E7%9A%84%E7%BB%93%E6%9E%9C%E4%BD%9C%E4%B8%BA%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0/</link><pubDate>Mon, 26 Sep 2016 13:27:45 +0000</pubDate><guid>https://petrie.github.io/2016/09/%E5%A6%82%E4%BD%95%E5%B0%86linux%E5%91%BD%E4%BB%A4%E7%9A%84%E7%BB%93%E6%9E%9C%E4%BD%9C%E4%B8%BA%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0/</guid><description>一、反引号 &amp;lsquo;`&amp;rsquo; echo `date` 二、$() echo $(date)
三、find exec参数 四、xargs find ./ | xarges ls -l</description></item><item><title>Mac下“.bashrc”不生效</title><link>https://petrie.github.io/2016/06/mac%E4%B8%8B.bashrc%E4%B8%8D%E7%94%9F%E6%95%88/</link><pubDate>Wed, 29 Jun 2016 10:54:10 +0000</pubDate><guid>https://petrie.github.io/2016/06/mac%E4%B8%8B.bashrc%E4%B8%8D%E7%94%9F%E6%95%88/</guid><description>新建&amp;quot;~/.bash_profile&amp;quot;，写入下面代码：
if [ &amp;#34;${BASH-no}&amp;#34; != &amp;#34;no&amp;#34; ]; then [ -r ~/.bashrc ] &amp;amp;&amp;amp; . ~/.bashrc fi 原因是执行.bashrc需要执行login shell， 而Mac启动时不会执行login shell，打开terminal也不会执行login shell</description></item><item><title>curl调用上传文件接口</title><link>https://petrie.github.io/2016/06/curl%E8%B0%83%E7%94%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3/</link><pubDate>Tue, 28 Jun 2016 20:07:11 +0000</pubDate><guid>https://petrie.github.io/2016/06/curl%E8%B0%83%E7%94%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3/</guid><description>一般场景下，使用curl模拟get，post请求。 今天的manpage是模拟上传文件请求
-F 参数执行文件路径和其他参数 -H 自定义 Host
curl -F &amp;#34;file=@/home/petrie/illegal_driver02.txt;name=file&amp;#34; &amp;#34;http://127.0.0.1:8000/biz/driver_mis/driver/uploadcsv&amp;#34; -H mis.petrie.com.cn</description></item><item><title>Linux下搭建Samba服务器</title><link>https://petrie.github.io/2013/02/linux%E4%B8%8B%E6%90%AD%E5%BB%BAsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Wed, 06 Feb 2013 10:26:12 +0000</pubDate><guid>https://petrie.github.io/2013/02/linux%E4%B8%8B%E6%90%AD%E5%BB%BAsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>##Linux下搭建Samba服务器##
安装文件
三种方式获取安装文件
1. 网络下载
在http://rpmfind.net搜索&amp;quot;samba&amp;quot;,下载对应rpm文件
2. 安装光盘
通过mount绑定到系统，然后拷贝使用详见
3. iso文件
通过mount绑定到系统，然后拷贝使用详见
安装命令
采用RPM方式安装。
rpm -ivh samba_版本信息.rpm
配置Samba
配置文件位置: /etc/samba/smb.conf</description></item><item><title>Linux挂载ISO文件</title><link>https://petrie.github.io/2012/03/linux%E6%8C%82%E8%BD%BDiso%E6%96%87%E4%BB%B6/</link><pubDate>Tue, 06 Mar 2012 10:26:12 +0000</pubDate><guid>https://petrie.github.io/2012/03/linux%E6%8C%82%E8%BD%BDiso%E6%96%87%E4%BB%B6/</guid><description>Linux 下绑定ISO文件 在/mnt下创建/mnt/centos_iso文件夹
mkdir /mnt/centos_iso
将/home/cksamba/share/下的centos.iso挂在到/mnt/centos_iso文件夹下
mount /home/cksamba/share/centos.iso /mnt/centos_iso -t iso9660 -o ro,loop=/dev/loop0
或者
mount /home/cksamba/share/centos.iso /mnt/centos_iso -o loop -t iso9660</description></item><item><title>LNMP环境搭建（一）安装前准备</title><link>https://petrie.github.io/2012/03/lnmp%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%80%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87/</link><pubDate>Tue, 06 Mar 2012 10:26:12 +0000</pubDate><guid>https://petrie.github.io/2012/03/lnmp%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%80%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87/</guid><description>博客后续将退出LNMP环境搭建系列博文：
安装依赖库： yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers
以上命令在连网下才能进行，如果不能联网需要配置本地yum源，配置方法请点击我以前的文章点击
下载安装所需的源码包： PHP相关程序包 php源码包：点击 php依赖的libmcrypt加密库：点击 php依赖的mcrypt加密库：点击 php依赖的编码转换库：点击 php依赖的mhash库：点击 memcache源码包：点击 eaccelerator源码包：点击 PDO_MYSQL源码包：点击 ImageMagick源码包：点击 imagick源码包：点击 Nginx 相关程序包 Nginx源码包：点击 MySQL相关程序包 MySQL源码包：点击 本文旨在在张宴博客的基础上，使得安装过程更加清晰易懂，更加适合新手。</description></item><item><title>Tar in Linux</title><link>https://petrie.github.io/2012/03/tar-in-linux/</link><pubDate>Tue, 06 Mar 2012 10:26:12 +0000</pubDate><guid>https://petrie.github.io/2012/03/tar-in-linux/</guid><description>将当前文件夹下的所有以.jpg为后缀的文件打包到all.tar.gz 压缩包内:
tar -czvf all.tar.gz * .jpg
将压缩文件all.tar.gz解压到文件夹dir下:
tar -xzvf all.tar.gz -C dir</description></item><item><title>利用CentOS.ISO配置本地yum源</title><link>https://petrie.github.io/2012/03/%E5%88%A9%E7%94%A8centos.iso%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</link><pubDate>Tue, 06 Mar 2012 10:26:12 +0000</pubDate><guid>https://petrie.github.io/2012/03/%E5%88%A9%E7%94%A8centos.iso%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</guid><description>#扯淡# 公司的网络要用代理，许多非常cool的东西都玩不了，真垃圾。
组长让搞一个LNMP的教程。
上次在开发机上乱搞，把LNMP搞乱了，程序不能运行，调了好久，最后只好请来别的组的一位大神才解决。谁让自己是LNMP菜鸟呢!组里也都是做.Net的
从此我就不敢再在开发机上乱弄了。 （这事才几天，缓缓再说）。
开发联网上网不用通过代理，用起来爽啊，装点啥直接yum。
这几天还得把LNMP教程弄出来。
用不了开发机，只能在本机折腾了，先装Mysql，源码安装要用到cmake，不能用yum（不能上网），自己找依赖吧。
本想依赖最多有1，2层吧，可是事实不是这样，各种深度，各种广度啊。果断改变策略。想起以前在uplooking学Linux的时候老师曾教过本地yum配置。所幸试一试。
废话了这么多终于要进入正题了&amp;hellip;
#正题# 1.将下好的dvdiso复制到虚拟机的 /home/petrie/ 下并重命名为centos.iso。此时iso的目录为/home/petrie/centos.iso
2.将dvdiso文件绑定到目录/mnt/centos_iso
mkdir /mnt/centos_iso
mount -o loop /home/petrie/centos.iso /mnt/centos_iso
好了，现在光盘中的rpm都可以用来安装了，但是这能安装那些没有依赖的，有依赖的要自行处理，接下来要安装的东西后面会用到，十分幸运，她没有依赖
3.安装配置软件
cd /mnt/centos_iso/CentOS
rpm -ivh createrepo-0.4.11-3.el5.noarch.rpm
4.运行createrepo
cd /mnt
createrepo ./ 这个过程挺长的2，3分钟吧
5.修改配置
cd /etc/yum.repos.d/
vim dvdiso.repo
在dvdiso.repo中写入以下内容：
[DVDISO]
name=DVD ISO
baseurl=file:///mnt/
enabled=1
gpgcheck=0
注意：步骤5 需要将/etc/yum.repos.d/下的文件清空，也就是说/etc/yum.repos.d/下只能有dvdiso.repo文件
这就好了，执行 yum clean all;yum list,执行成功则说明配置成功了。 赶紧装个软件试试吧~ pretty cool！ huh~</description></item></channel></rss>