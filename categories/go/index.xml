<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Petrie's Site</title><link>https://petrie.github.io/categories/go/</link><description>Recent content in go on Petrie's Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 05 May 2023 11:46:21 +0800</lastBuildDate><atom:link href="https://petrie.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>【译】如何避免协程泄漏</title><link>https://petrie.github.io/2023/05/%E8%AF%91%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%8D%8F%E7%A8%8B%E6%B3%84%E6%BC%8F/</link><pubDate>Fri, 05 May 2023 11:46:21 +0800</pubDate><guid>https://petrie.github.io/2023/05/%E8%AF%91%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%8D%8F%E7%A8%8B%E6%B3%84%E6%BC%8F/</guid><description>&lt;p>Go语言最大的优势之一就是协程并发，但是，能力越大责任越大。
使用协程虽然很简单，但是如果不小心很容易引入难以排查的bug。
协程泄漏就是其中之一，随着协程数量的增长，最终会导致应用程序出现问题。
这篇文章列举了协程泄漏的各种场景，以及如何规避。&lt;/p></description></item></channel></rss>